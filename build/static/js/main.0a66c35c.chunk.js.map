{"version":3,"sources":["store/reducer.js","store/index.js","config/firebase.js","Components/Authentication/loginDialog.js","store/action.js","Components/Authentication/signUpUser.js","Components/Authentication/signUpResturant.js","Components/navBarSimple.js","Components/DashBoard/NavBar_Dashboard.js","Components/DashBoard/UserView/resturant.js","Components/DashBoard/UserView/request.js","Components/DashBoard/UserView/DashBoard_User.js","Components/DashBoard/RestaurantView/DashBoard_Resturant.js","Components/DashBoard/UserView/DetailScreen.js","config/router.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","arguments","length","undefined","action","type","Object","objectSpread","user","data","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","auth","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","signInWithEmailAndPassword","email","password","then","success","uid","currentUser","localStorage","setItem","JSON","stringify","console","log","ref","on","user_data","UserData","val","array","keyId","push","category","map","v","history","store_user","catch","error","alert","stop","_x","apply","handleChange","e","setState","defineProperty","target","id","value","fbData","show","open","handleClickOpen","bind","assertThisInitialized","handleClose","_this$state","react_default","createElement","Button","color","onClick","Dialog","onClose","aria-labelledby","lib","onSubmit","onError","errors","DialogTitle","DialogContent","autoFocus","margin","label","onChange","validators","errorMessages","fullWidth","DialogActions","Component","connect","dispatch","update_user","withRouter","SignupUser","createUserWithEmailAndPassword","userObj","name","gender","age","country","city","createTime","ServerValue","TIMESTAMP","userUid","confirmPass","_this2","ValidatorForm","addValidationRule","removeValidationRule","SignupResturant","image","pictures","restaurantObj","foodItem","rating","concat","put","snapshot","getDownloadURL","sanpUrl","img","imgUrl","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","avatar","child","url","avatarURL","imageUpload","files","_this$state2","accept","NavBar","handleClick","handleClickAway","anchorEl","currentTarget","classes","Boolean","className","root","AppBar","position","Toolbar","style","background","IconButton","menuButton","aria-label","Menu_default","Typography","variant","grow","Fragment","loginDialog","aria-describedby","Popper","Paper","signUpUser","signUpResturant","withStyles","theme","flexGrow","marginLeft","marginRight","paper","width","NavBar_Dashboard","logOut","signOut","Resturant","text","search","columns","title","field","once","key2","dist_default","actions","icon","tooltip","rowData","React","Request","Tabs","backgroundColor","Tab","palette","UserView","DashBoard_NavBar_Dashboard","resturant","request","RestaurantView","UserDetailScreen","BrowserHistory","require","createBrowserHistory","Routers","react_router","exact","path","component","Home","DashBoardUser","UserScreen","DashBoardRestaurant","App","loading","authenticated","onAuthStateChanged","react_redux_es","integration_react","router","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a66c35c.chunk.js","sourcesContent":["\r\nconst reducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case \"SET_USER\": {\r\n            // console.log('set user===>>', action)\r\n            return {...state, user: action.data}\r\n        }\r\n        case \"REMOVE_USER\": {\r\n            return {...state, user: null}\r\n        }\r\n\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;","// import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//persist\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\r\nconst persistor = persistStore(store);\r\nexport {\r\n    store,\r\n    persistor,\r\n}\r\n\r\n\r\n// //Basic Configuration\r\n// import { createStore } from 'redux';\r\n// import reducer from './reducer';\r\n// const store = createStore(reducer);\r\n\r\n// export default store;","import * as firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n        apiKey: \"AIzaSyAPL_eEr1n4Bz043g8olfA0ylhkWsQcyMI\",\r\n        authDomain: \"food-delivery-app-865d0.firebaseapp.com\",\r\n        databaseURL: \"https://food-delivery-app-865d0.firebaseio.com\",\r\n        projectId: \"food-delivery-app-865d0\",\r\n        storageBucket: \"food-delivery-app-865d0.appspot.com\",\r\n        messagingSenderId: \"834669992468\",\r\n        appId: \"1:834669992468:web:ee042cb933eca4c2\"\r\n     \r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nvar db = firebase.database();\r\nvar auth = firebase.auth();\r\nvar storage= firebase.storage();\r\n// var uid = firebase.auth().currentUser.uid;\r\n// console.log(uid)\r\n\r\n// function getRealtimeTOdo() {\r\n//     return new Promise((resolve, reject) => {\r\n//         //one time data retreive\r\n//         // get array\r\n\r\n//         // db.collection('todo').get().then(snapshot => {\r\n//         // console.log(snapshot)\r\n//         //.get().then is used for one time data retreive\r\n\r\n//         //for real time data retreive\r\n//         db.collection('todo').onSnapshot(snapshot => {\r\n\r\n//             const temp = [];\r\n//             // forEach for loop to get child data\r\n//             snapshot.forEach(doc => {\r\n//                 //    console.log('data===>>', doc.data());\r\n//                 //    console.log('data id===>>', doc.id);\r\n//                 const obj = { id: doc.id, ...doc.data() }\r\n//                 temp.push(obj);\r\n//             })\r\n//             console.log('temp ===>>>', temp);\r\n//             resolve(temp);\r\n//         })\r\n//     })\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport default firebase;\r\nexport {\r\n    auth,\r\n    db,\r\n    storage,\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { update_user } from '../../store/action';\r\nimport { connect } from 'react-redux';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n// import DashBoard_User from '../DashBoard/UserView/DashBoard_User';\r\n\r\nimport firebase from '../../config/firebase';\r\nvar db = firebase.database();\r\nvar auth = firebase.auth();\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        email: '',\r\n        password: '',\r\n      },\r\n      fbData: [],\r\n      show: false,\r\n      open: false,\r\n    }\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({ show: true });\r\n    // setOpen(true);\r\n  }\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { data } = this.state;\r\n    // try {\r\n    //   await\r\n        auth.signInWithEmailAndPassword(data.email, data.password)\r\n   \r\n   .then((success) => {\r\n          var uid = firebase.auth().currentUser.uid;\r\n          localStorage.setItem(\"uid\", JSON.stringify(uid))\r\n          console.log(uid)\r\n          db.ref('users/' + uid).on('value', (user_data) => {\r\n            var UserData = user_data.val()\r\n            console.log('==>> data ', UserData)\r\n            let array = []\r\n            for (var key in UserData) {\r\n              UserData[key].keyId = key\r\n              array.push(UserData[key])\r\n              console.log(UserData[key].category)\r\n            }\r\n            array.map((v) => {\r\n              console.log(v.email)\r\n              if (v.category === \"user\") {\r\n                this.props.history.push(\"/DashUser\")\r\n            } else {\r\n                this.props.history.push(\"/DashRest\")\r\n            }\r\n              })\r\n\r\n            this.props.store_user(UserData)\r\n          })\r\n          // console.log(success)\r\n          console.log('login hogia')\r\n          // this.props.history.push(\"/DashUser\")\r\n\r\n          })\r\n    //     }\r\n    // catch (error) {\r\n    //     alert(error);\r\n    //   }\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n      \r\n\r\n    }\r\n\r\n  handleChange = e =>\r\n      this.setState({\r\n        data: { ...this.state.data, [e.target.id]: e.target.value }\r\n      });\r\n    render() {\r\n      const { show, data} = this.state;\r\n      return (\r\n        <div>\r\n\r\n          <Button color=\"inherit\" onClick={this.handleClickOpen}>\r\n            Login\r\n      </Button>\r\n          <Dialog open={show} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <ValidatorForm\r\n              ref=\"form\"\r\n              onSubmit={this.handleSubmit}\r\n              onError={errors => console.log(errors)}\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n              <DialogContent>\r\n                {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText> */}\r\n                <TextValidator\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  onChange={this.handleChange}\r\n                  value={data.email}\r\n                  type=\"email\"\r\n                  validators={['required', 'isEmail']}\r\n                  errorMessages={['this field is required', 'email is not valid']}\r\n                  fullWidth\r\n                />\r\n                <TextValidator\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  onChange={this.handleChange}\r\n                  value={data.password}\r\n                  type=\"password\"\r\n                  validators={['required']}\r\n                  errorMessages={['this field is required']}\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleClose} color=\"primary\">\r\n                  Cancel\r\n                        </Button>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  Login\r\n                       </Button>\r\n              </DialogActions>\r\n            </ValidatorForm>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      store_user: (user) => dispatch(update_user(user)) \r\n    }\r\n  }\r\n\r\n  export default connect(null, mapDispatchToProps)(withRouter(Login));\r\n// export default withRouter(Login)\r\n","// import firebase from '../config/firebase';\r\n// const db = firebase.database();\r\n\r\nconst update_user = (user) => {\r\n    // console.log(user)\r\n    return {\r\n        type: \"SET_USER\",\r\n        data: user\r\n    }\r\n}\r\n\r\nconst remove_user = () => {\r\n    return {\r\n        type: \"REMOVE_USER\"\r\n    }\r\n}\r\n\r\n// const update_todos = () => {\r\n//     return (dispatch) => {\r\n//         db.collection('todo').onSnapshot(snapshot => {\r\n//             const temp = [];\r\n    \r\n//             snapshot.forEach(doc => {\r\n//                 const obj = {id: doc.id, ...doc.data()}\r\n//                 temp.push(obj);\r\n//             })\r\n//             console.log('getRealtimeTodo ===>', temp);\r\n//             dispatch({\r\n//                 type: 'UPDATE_TODOS',\r\n//                 payload: temp\r\n//             })\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport {\r\n    update_user,\r\n    remove_user,\r\n    // update_todos\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from '../../config/firebase';\r\n\r\nvar db = firebase.database();\r\nvar auth = firebase.auth();\r\n\r\nclass SignupUser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {\r\n        name: '',\r\n        email: '',\r\n        gender: '',\r\n        password: '',\r\n        confirmPass: '',\r\n        age: '',\r\n        country: '',\r\n        city: '',\r\n      },\r\n\r\n      errors: {},\r\n      // data:[],\r\n\r\n      show: false,\r\n      open: false,\r\n      // login: false,\r\n      //   user: null,\r\n    }\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n    // this.signupForm = this.signupForm.bind(this)\r\n  }\r\n\r\n\r\n  // export default function SignupDialog() {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  handleClickOpen() {\r\n    this.setState({ show: true });\r\n    // setOpen(true);\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    // console.log('done')\r\n    e.preventDefault();\r\n    const { data } = this.state;\r\n    // console.log(email)\r\n    // console.log(password)\r\n    auth.createUserWithEmailAndPassword(data.email, data.password)\r\n      // .then(() => { alert('hogia')})\r\n      .then((success) => {\r\n        // document.getElementById(\"loaders\").style.display = 'none';\r\n        let userObj = {\r\n          name: data.name,\r\n          email: data.email,\r\n          gender: data.gender,\r\n          age: data.age,\r\n          country: data.country,\r\n          city: data.city,\r\n          category: \"user\",\r\n          createTime: firebase.database.ServerValue.TIMESTAMP,\r\n          uid: success.user.uid\r\n        }\r\n        let userUid = firebase.auth().currentUser.uid\r\n        console.log(userUid)\r\n        db.ref('users/' + userUid)\r\n          .push(userObj)\r\n          .then(() => { alert('account created! ') })\r\n        this.props.history.push(\"/DashUser\")\r\n      })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n    \r\n  }\r\n\r\n\r\n  handleChange = e =>\r\n    this.setState({\r\n      data: { ...this.state.data, [e.target.id]: e.target.value }\r\n    });\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      if (value !== this.state.data.password) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isPasswordMatch');\r\n  }\r\n\r\n  render() {\r\n    // const classes = useStyles();\r\n    const { show, data } = this.state;\r\n    console.log(data)\r\n    // console.log(show)\r\n    // console.log('normal open....===>>', open)\r\n    return (\r\n      <div>\r\n\r\n        <Button color=\"inherit\" onClick={this.handleClickOpen}>\r\n          Register User\r\n      </Button>\r\n        <Dialog open={show} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            onSubmit={this.handleSubmit}\r\n            onError={errors => console.log(errors)}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Register User</DialogTitle>\r\n            <DialogContent>\r\n              {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText> */}\r\n\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Full Name\"\r\n                // onChange={(e) => { this.setState({ fullName: e.target.value }) }}\r\n                onChange={this.handleChange}\r\n                value={data.name}\r\n                type=\"text\"\r\n                validators={['required']}\r\n                errorMessages={['this field is required', 'use only alphabet A to Z']}\r\n                fullWidth\r\n              />\r\n\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                onChange={this.handleChange}\r\n                value={data.email}\r\n                type=\"email\"\r\n                validators={['required', 'isEmail']}\r\n                errorMessages={['this field is required', 'email is not valid']}\r\n                fullWidth\r\n              />\r\n\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"gender\"\r\n                label=\"Gender\"\r\n                onChange={this.handleChange}\r\n                value={data.gender}\r\n                type=\"text\"\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n                fullWidth\r\n              />\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"age\"\r\n                label=\"Age\"\r\n                onChange={this.handleChange}\r\n                value={data.age}\r\n                type=\"number\"\r\n                validators={['required']}\r\n                errorMessages={['this field is required', 'age should be between 1 to 150']}\r\n                fullWidth\r\n              />\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"country\"\r\n                label=\"Country\"\r\n                onChange={this.handleChange}\r\n                value={data.country}\r\n                type=\"text\"\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n                fullWidth\r\n              />\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"city\"\r\n                label=\"City\"\r\n                onChange={this.handleChange}\r\n                value={data.city}\r\n                type=\"text\"\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n                fullWidth\r\n              />\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                onChange={this.handleChange}\r\n                value={data.password}\r\n                type=\"password\"\r\n                validators={['required']}\r\n                errorMessages={['this field is required']}\r\n                fullWidth\r\n              />\r\n              <TextValidator\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"confirmPass\"\r\n                label=\"Confirm Password\"\r\n                onChange={this.handleChange}\r\n                value={data.confirmPass}\r\n                type=\"password\"\r\n                validators={[ 'required']}\r\n                errorMessages={['password mismatch', 'this field is required']}\r\n                fullWidth\r\n              />\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n          </Button>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Signup\r\n          </Button>\r\n            </DialogActions>\r\n          </ValidatorForm>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(SignupUser);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport firebase from '../../config/firebase';\r\nimport { storage } from '../../config/firebase';\r\n\r\n\r\nvar db = firebase.database();\r\nvar auth = firebase.auth();\r\n// var storage= firebase.storage();\r\n\r\nclass SignupResturant extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {\r\n                name: '',\r\n                email: '',\r\n                country: '',\r\n                city: '',\r\n                password: '',\r\n                confirmPass: '',\r\n                foodItem: '',\r\n                rating: '',\r\n                pictures: {},\r\n            },\r\n\r\n            errors: {},\r\n            // data:[],\r\n\r\n            show: false,\r\n            open: false,\r\n            // login: false,\r\n            //   user: null,\r\n            // avatar: \"\",\r\n            // isUploading: false,\r\n            // progress: 0,\r\n            // avatarURL: \"\",\r\n\r\n            imgUrl:'',\r\n        }\r\n        this.handleClickOpen = this.handleClickOpen.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n        // this.signupForm = this.signupForm.bind(this)\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({ show: true });\r\n        // setOpen(true);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(e)\r\n        e.preventDefault();\r\n        const { data,image } = this.state;\r\n        console.log(data.pictures)\r\n        // console.log(password)\r\n        auth.createUserWithEmailAndPassword(data.email, data.password)\r\n            // .then(() => { alert('hogia')})\r\n            .then((success) => {\r\n                // document.getElementById(\"loaders\").style.display = 'none';\r\n                let restaurantObj = {\r\n                    name: data.name,\r\n                    email: data.email,\r\n                    country: data.country,\r\n                    city: data.city,\r\n                    category: \"restaurant\",\r\n                    foodItem: data.foodItem,\r\n                    rating: data.rating,\r\n                    createTime: firebase.database.ServerValue.TIMESTAMP,\r\n                    uid: success.user.uid,\r\n\r\n                }\r\n                let userUid = firebase.auth().currentUser.uid\r\n                console.log(userUid)\r\n                // Cover Image Restaurant\r\n                let storageRef = storage.ref(`restaurantImages/${userUid}/${image.name}`)\r\n                storageRef.put(image)\r\n                .then((snapshot) => {\r\n                        //progress function......\r\n                        snapshot.ref.getDownloadURL().then((sanpUrl) => {\r\n                            console.log(sanpUrl)\r\n                            restaurantObj.img = sanpUrl\r\n                            this.setState({\r\n                                imgUrl: sanpUrl,\r\n                            })\r\n                            db.ref('users/' + userUid)\r\n                                .push(restaurantObj)\r\n                                .then(() => { alert('Account Created!') })\r\n                                this.props.history.push(\"/DashRest\")\r\n                        })\r\n                    })\r\n                    })\r\n                    // (error) => {\r\n                    //     //error function......\r\n                    //     console.log(error);\r\n                    // },\r\n                    // () => {\r\n                    //     //complete function......\r\n                    //     storage.ref('restaurantImages').child(userUid + image.name)\r\n                    //         .getDownloadURL().then(url => {\r\n                    //             console.log(url);\r\n                    //             this.setState({\r\n                    //                 imgUrl: url,\r\n                    //             })\r\n                    //         })\r\n                    // });\r\n            // })\r\n\r\n\r\n\r\n\r\n\r\n        //     let storageRef = firebase.storage().ref(`restaurantImages/${userUid}/${image.name}`).put(image);\r\n        //     storageRef.put(data.pictures)\r\n        //         .then((snapshot) => {\r\n        //             snapshot.ref.getDownloadURL().then((sanpUrl) => {\r\n        //                 console.log(sanpUrl)\r\n        //                 restaurantObj.img = sanpUrl\r\n\r\n        //                     firebase.database().ref('restaurant/' + userUid)\r\n        //                         .push(restaurantObj)\r\n        //                         .then(() => { alert('db done') })\r\n        //                     })\r\n        //                 })       \r\n        // })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n        // });\r\n    }\r\n\r\n\r\n    handleChange = e =>\r\n        this.setState({\r\n            data: { ...this.state.data, [e.target.id]: e.target.value }\r\n        });\r\n\r\n    // repeat password validation ***********\r\n    componentDidMount() {\r\n        // custom rule will have name 'isPasswordMatch'\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if (value !== this.state.data.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // remove rule when it is not needed\r\n        ValidatorForm.removeValidationRule('isPasswordMatch');\r\n    }\r\n\r\n\r\n\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n    handleProgress = progress => this.setState({ progress });\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        console.error(error);\r\n    };\r\n    handleUploadSuccess = filename => {\r\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ avatarURL: url }));\r\n    };\r\n\r\n\r\n    imageUpload = e => {\r\n        if (e.target.files[0]) {\r\n            const image = e.target.files[0];\r\n            this.setState(() => ({ image }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // const classes = useStyles();\r\n        const { show, data, imgUrl } = this.state;\r\n        console.log(data)\r\n        console.log(imgUrl)\r\n        // console.log('normal open....===>>', open)\r\n        return (\r\n            <div>\r\n\r\n                <Button color=\"inherit\" onClick={this.handleClickOpen}>\r\n                    Register Resturant\r\n      </Button>\r\n                <Dialog open={show} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <ValidatorForm\r\n                        ref=\"form\"\r\n                        onSubmit={this.handleSubmit}\r\n                        onError={errors => console.log(errors)}\r\n                    >\r\n                        <DialogTitle id=\"form-dialog-title\">Register Resturant</DialogTitle>\r\n                        <DialogContent>\r\n                            {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText> */}\r\n\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"Full Name\"\r\n                                // onChange={(e) => { this.setState({ fullName: e.target.value }) }}\r\n                                onChange={this.handleChange}\r\n                                value={data.name}\r\n                                type=\"text\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required', 'use only alphabet A to Z']}\r\n                                fullWidth\r\n                            />\r\n\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                onChange={this.handleChange}\r\n                                value={data.email}\r\n                                type=\"email\"\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                fullWidth\r\n                            />\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"country\"\r\n                                label=\"Country\"\r\n                                onChange={this.handleChange}\r\n                                value={data.country}\r\n                                type=\"text\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                fullWidth\r\n                            />\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"city\"\r\n                                label=\"City\"\r\n                                onChange={this.handleChange}\r\n                                value={data.city}\r\n                                type=\"text\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                fullWidth\r\n                            />\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                onChange={this.handleChange}\r\n                                value={data.password}\r\n                                type=\"password\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                fullWidth\r\n                            />\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"confirmPass\"\r\n                                label=\"Confirm Password\"\r\n                                onChange={this.handleChange}\r\n                                value={data.confirmPass}\r\n                                type=\"password\"\r\n                                validators={['isPasswordMatch', 'required']}\r\n                                errorMessages={['password mismatch', 'this field is required']}\r\n                                fullWidth\r\n                            />\r\n\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"foodItem\"\r\n                                label=\"Food Items\"\r\n                                // onChange={(e) => { this.setState({ fullName: e.target.value }) }}\r\n                                onChange={this.handleChange}\r\n                                value={data.foodItem}\r\n                                type=\"text\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required', 'use only alphabet A to Z']}\r\n                                fullWidth\r\n                            />\r\n                            <TextValidator\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"rating\"\r\n                                label=\"Rating\"\r\n                                onChange={this.handleChange}\r\n                                value={data.rating}\r\n                                type=\"number\"\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required', 'rating should be between 1 to 10']}\r\n                                fullWidth\r\n                            />\r\n                            <TextValidator\r\n                                label=\"Upload\"\r\n                                accept=\"image/*\"\r\n                                id=\"pictures\"\r\n                                onChange={this.imageUpload}\r\n                                // value={data.pictures}\r\n                                type=\"file\"\r\n                            />\r\n                            {/* <FileUploader\r\n                                accept=\"image/*\"\r\n                                name=\"avatar\"\r\n                                randomizeFilename\r\n                                storageRef={firebase.storage().ref(\"images\")}\r\n                                onUploadStart={this.handleUploadStart}\r\n                                onUploadError={this.handleUploadError}\r\n                                onUploadSuccess={this.handleUploadSuccess}\r\n                                onProgress={this.handleProgress}\r\n                            /> */}\r\n                        </DialogContent>\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n          </Button>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Signup\r\n          </Button>\r\n                        </DialogActions>\r\n                    </ValidatorForm>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(SignupResturant);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n// import ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nimport LoginDialog from './Authentication/loginDialog';\r\nimport SignupUser  from './Authentication/signUpUser';\r\nimport SignupResturant from './Authentication/signUpResturant';\r\nconst styles = theme => ({\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    // top: 36,\r\n    // right: 0,\r\n    // left: 0,\r\n    width: 'max-content',\r\n  },\r\n\r\n});\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    this.setState(state => ({\r\n      open: !state.open,\r\n    }));\r\n  };\r\n\r\n  handleClickAway = () => {\r\n    this.setState({\r\n      open: false,\r\n      anchorEl: null,\r\n    });\r\n  };\r\n\r\n\r\n  handleClick = event => {\r\n    const { currentTarget } = event;\r\n    this.setState(state => ({\r\n      anchorEl: state.anchorEl ? null : currentTarget,\r\n    }));\r\n  };\r\n\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'no-transition-popper' : null;\r\n    // // Properties\r\n    // const { name, isPerformingAuthAction, isSignedIn, user } = this.props;\r\n\r\n    // // Events\r\n    // const { onSignUpClick, onSignInClick } = this.props;\r\n\r\n   \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar style={{ background: '#D70F64' }}>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n          \r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Food Delivery App\r\n          </Typography>\r\n           \r\n            <React.Fragment >\r\n              <LoginDialog />\r\n              <Button aria-describedby={id} color=\"inherit\" onClick={this.handleClick}>\r\n                Signup\r\n        </Button>\r\n              <Popper id={id} open={open} anchorEl={anchorEl}>\r\n                <Paper>\r\n                  <SignupUser />\r\n                  <SignupResturant />\r\n                </Paper>\r\n              </Popper>\r\n            </React.Fragment>\r\n            \r\n\r\n            \r\n            {/* {isSignedIn &&\r\n            <React.Fragment>\r\n              <IconButton color=\"inherit\" disabled={isPerformingAuthAction} onClick={this.openMenu}>\r\n                {user.photoURL ? <Avatar alt=\"Avatar\" src={user.photoURL} /> : <PersonIcon />}\r\n              </IconButton>\r\n\r\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\r\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\r\n                <MenuItem disabled={isPerformingAuthAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\r\n              </Menu>\r\n            </React.Fragment>\r\n          }\r\n\r\n          {!isSignedIn &&\r\n            <React.Fragment>\r\n              <Button className={classes.signUpButton} color=\"inherit\" disabled={isPerformingAuthAction}  onClick={onSignUpClick}>Sign Up</Button>\r\n              <Button color=\"inherit\" disabled={isPerformingAuthAction}  onClick={onSignInClick}>Sign In</Button>\r\n            </React.Fragment>\r\n          } */}\r\n\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n\r\n\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport firebase from '../../config/firebase';\r\n\r\nvar auth = firebase.auth();\r\n\r\nconst styles = theme => ({\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 'max-content',\r\n  },\r\n\r\n});\r\n\r\nclass NavBar_Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    this.setState(state => ({\r\n      open: !state.open,\r\n    }));\r\n  };\r\n\r\n  handleClickAway = () => {\r\n    this.setState({\r\n      open: false,\r\n      anchorEl: null,\r\n    });\r\n  };\r\n\r\n\r\n  logOut = event => {\r\n    // const { currentTarget } = event;\r\n    // this.setState(state => ({\r\n    //   anchorEl: state.anchorEl ? null : currentTarget,\r\n    // }));\r\n    auth.signOut()\r\n    .then(() => {\r\n        localStorage.setItem(\"uid\", JSON.stringify({ user: \"null\" }))\r\n        alert('Logout')\r\n        \r\n    })\r\n    .then(()=>{\r\n      this.props.history.push(\"/\")\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'no-transition-popper' : null;\r\n   \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar style={{ background: '#D70F64' }}>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon />\r\n              \r\n            </IconButton>\r\n          \r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Food Delivery App\r\n          </Typography>\r\n           \r\n            <React.Fragment >\r\n              <Button aria-describedby={id} color=\"inherit\" onClick={this.logOut}>\r\n                Logout\r\n        </Button>\r\n            </React.Fragment>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar_Dashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n\r\n\r\n};\r\n\r\nexport default withStyles(styles)(withRouter(NavBar_Dashboard));","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n// helper\r\nimport MaterialTable from 'material-table';\r\n\r\nimport firebase from '../../../config/firebase';\r\n\r\nvar db = firebase.database();\r\n// var auth = firebase.auth();\r\nclass Resturant extends React.Component {\r\n    state = {\r\n        value: 0,\r\n        text: '',\r\n        search: false,\r\n\r\n        //sort data\r\n        columns: [\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Food Item', field: 'foodItem' },\r\n            { title: 'City', field: 'city' },\r\n            {\r\n                title: 'Rating',\r\n                field: 'rating',\r\n                // lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n            },\r\n        ],\r\n\r\n        data: [\r\n\r\n            {\r\n                name: '',\r\n                foodItem: '',\r\n                city: '',\r\n                rating: '',\r\n\r\n            },\r\n        ],\r\n        db: []\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        // let localUid= localStorage.getItem(\"uid\");\r\n        // let uID= JSON.parse(localUid)\r\n        // // console.log(uID)\r\n        db.ref('users/').once('value', (user_data) => {\r\n            // console.log(user_data)\r\n            var UserData = user_data.val();\r\n            console.log(UserData)\r\n            let array = []\r\n            for (var key in UserData) { \r\n                for (var key2 in UserData[key]) {\r\n                    UserData[key][key2].keyId = key\r\n                    console.log(UserData[key][key2].category)\r\n                    if (UserData[key][key2].category === \"restaurant\") {\r\n                    array.push(UserData[key][key2])\r\n                    }\r\n                }\r\n            }\r\n            // array.map((v) => {\r\n            //   console.log(v.city)\r\n            // })\r\n            console.log(array)\r\n            this.setState({\r\n                data: array\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        console.log(data)\r\n        return (\r\n            <div >\r\n                <MaterialTable\r\n                    title=\"Available Restaurants\"\r\n                    columns={this.state.columns}\r\n                    data={data}\r\n                    actions={[\r\n                        {\r\n                          icon: 'more',\r\n                          tooltip: 'Detail',\r\n                          onClick: (event, rowData) => {\r\n                            // this.props.history.push(\"/DetailUserScreen\")\r\n                            console.log('done')\r\n                          }\r\n                        }\r\n                      ]}\r\n\r\n                    \r\n                // editable={{\r\n                //     onRowAdd: newData =>\r\n                //         new Promise(resolve => {\r\n                //             setTimeout(() => {\r\n                //                 resolve();\r\n                //                 const data = [...this.state.data];\r\n                //                 data.push(newData);\r\n                //                 this.setState({ ...this.state, data });\r\n                //             }, 600);\r\n                //         }),\r\n                //     onRowUpdate: (newData, oldData) =>\r\n                //         new Promise(resolve => {\r\n                //             setTimeout(() => {\r\n                //                 resolve();\r\n                //                 const data = [...this.state.data];\r\n                //                 data[data.indexOf(oldData)] = newData;\r\n                //                 this.setState({ ...this.state, data });\r\n                //             }, 600);\r\n                //         }),\r\n                //     onRowDelete: oldData =>\r\n                //         new Promise(resolve => {\r\n                //             setTimeout(() => {\r\n                //                 resolve();\r\n                //                 const data = [...this.state.data];\r\n                //                 data.splice(data.indexOf(oldData), 1);\r\n                //                 this.setState({ ...this.state, data });\r\n                //             }, 600);\r\n                //         }),\r\n                // }}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Resturant);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst stylesTab = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass Request extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n        };\r\n\r\n    }\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={value} style={{backgroundColor:'grey'}} onChange={this.handleChange}>\r\n                        <Tab label=\"Pending\" />\r\n                        <Tab label=\"In Progress\" />\r\n                        <Tab label=\"Delivered\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && 'Pending'}\r\n\r\n                {value === 1 && 'In Progress'}\r\n\r\n                {value === 2 && 'Delivered'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRequest.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(stylesTab)(Request);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// helper\r\n\r\nimport NavBar from '../NavBar_Dashboard';\r\n//Components\r\nimport Restaurant from './resturant';\r\nimport Request from './request';\r\n\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst stylesTab = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass UserView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n        };\r\n\r\n    }\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <NavBar/>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={value} onChange={this.handleChange}>\r\n                        <Tab label=\"Restaurant\" />\r\n                        <Tab label=\"Request\" />\r\n                        {/* <Tab label=\"Dashboard\" /> */}\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && <Restaurant/>}\r\n\r\n                {value === 1 && <Request/>}\r\n\r\n                {/* {value === 2 && <DashBoard />} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserView.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(stylesTab)(UserView);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport NavBar from '../NavBar_Dashboard';\r\n\r\nfunction TabContainer(props) {\r\n    return (\r\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst stylesTab = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass RestaurantView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n        };\r\n\r\n    }\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <NavBar/>\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={value} onChange={this.handleChange}>\r\n                        <Tab label=\"Pending\" />\r\n                        <Tab label=\"In Progress\" />\r\n                        <Tab label=\"Delivered\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {value === 0 && 'Pending'}\r\n\r\n                {value === 1 && 'In Progress'}\r\n\r\n                {value === 2 && 'Delivered'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRestaurantView.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(stylesTab)(RestaurantView);","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n// helper\r\nimport MaterialTable from 'material-table';\r\nimport NavBar from '../NavBar_Dashboard';\r\n\r\nimport firebase from '../../../config/firebase';\r\n\r\nvar db = firebase.database();\r\n// var auth = firebase.auth();\r\nclass UserDetailScreen extends React.Component {\r\n    state = {\r\n        value: 0,\r\n        text: '',\r\n        search: false,\r\n\r\n        //sort data\r\n        columns: [\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Food Item', field: 'foodItem' },\r\n            { title: 'City', field: 'city' },\r\n            {\r\n                title: 'Rating',\r\n                field: 'rating',\r\n                // lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n            },\r\n            {title:'Detail'}\r\n        ],\r\n\r\n        data: [\r\n\r\n            {\r\n                name: '',\r\n                foodItem: '',\r\n                city: '',\r\n                rating: '',\r\n\r\n            },\r\n        ],\r\n        db: []\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        // let localUid= localStorage.getItem(\"uid\");\r\n        // let uID= JSON.parse(localUid)\r\n        // // console.log(uID)\r\n        db.ref('users/').once('value', (user_data) => {\r\n            // console.log(user_data)\r\n            var UserData = user_data.val();\r\n            console.log(UserData)\r\n            let array = []\r\n            for (var key in UserData) { \r\n                for (var key2 in UserData[key]) {\r\n                    UserData[key][key2].keyId = key\r\n                    console.log(UserData[key][key2].category)\r\n                    if (UserData[key][key2].category === \"restaurant\") {\r\n                    array.push(UserData[key][key2])\r\n                    }\r\n                }\r\n            }\r\n            // array.map((v) => {\r\n            //   console.log(v.city)\r\n            // })\r\n            console.log(array)\r\n            this.setState({\r\n                data: array\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        console.log(data)\r\n        return (\r\n            <div >\r\n                <NavBar/>\r\n                <MaterialTable\r\n                    title=\"Dtails\"\r\n                    columns={this.state.columns}\r\n                    data={data}\r\n                    // actions={[\r\n                    //     {\r\n                    //       icon: 'save',\r\n                    //       tooltip: 'Save User',\r\n                    //       onClick: (event, rowData) => {\r\n                    //         this.props.history.push(\"/\")\r\n                    //         console.log('s')\r\n                    //       }\r\n                    //     }\r\n                    //   ]}\r\n\r\n                    \r\n                // editable={{\r\n                //     onRowAdd: newData =>\r\n                //         new Promise(resolve => {\r\n                //             setTimeout(() => {\r\n                //                 resolve();\r\n                //                 const data = [...this.state.data];\r\n                //                 data.push(newData);\r\n                //                 this.setState({ ...this.state, data });\r\n                //             }, 600);\r\n                //         }),\r\n                //     onRowUpdate: (newData, oldData) =>\r\n                //         new Promise(resolve => {\r\n                //             setTimeout(() => {\r\n                //                 resolve();\r\n                //                 const data = [...this.state.data];\r\n                //                 data[data.indexOf(oldData)] = newData;\r\n                //                 this.setState({ ...this.state, data });\r\n                //             }, 600);\r\n                //         }),\r\n                //     onRowDelete: oldData =>\r\n                //         new Promise(resolve => {\r\n                //             setTimeout(() => {\r\n                //                 resolve();\r\n                //                 const data = [...this.state.data];\r\n                //                 data.splice(data.indexOf(oldData), 1);\r\n                //                 this.setState({ ...this.state, data });\r\n                //             }, 600);\r\n                //         }),\r\n                // }}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(UserDetailScreen);","import React, { Component } from 'react';\r\nimport { Route, Router } from 'react-router-dom'\r\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n//Componenets\r\nimport Home from '../Components/navBarSimple';\r\nimport DashBoardUser from '../Components/DashBoard/UserView/DashBoard_User';\r\nimport Resturant from '../Components/DashBoard/UserView/resturant';\r\nimport DashBoardRestaurant from '../Components/DashBoard/RestaurantView/DashBoard_Resturant';\r\nimport UserScreen from '../Components/DashBoard/UserView/DetailScreen';\r\n\r\n// import { createBrowserHistory } from 'history';\r\nconst BrowserHistory = require(\"history\").createBrowserHistory\r\nconst history = BrowserHistory()\r\nconsole.log(history)\r\n\r\nclass Routers extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/DashUser\" component={DashBoardUser} />\r\n        <Route path=\"/resturant\" component={Resturant} />\r\n        <Route path=\"/DetailUserScreen\" component={UserScreen} />\r\n        <Route path=\"/DashRest\" component={DashBoardRestaurant} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default Routers;\r\n\r\n\r\n/* <div>\r\n      <PrivateRoute\r\n        exact\r\n        path=\"/\"\r\n        component={NavBar}\r\n        authenticated={authenticated}\r\n      />\r\n    </div> */","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { store, persistor } from './store';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { Provider } from 'react-redux';\n// routing***********\n// import Navigations from './config/router';\n// import LoginDialog from './Components/Authentication/loginDialog';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// import PrivateRoute from './config/privateRoute';\n\nimport Routers from './config/router';\nimport firebase from './config/firebase';\n\n\n// var db = firebase.database();\nvar auth = firebase.auth();\n\n\n\nclass App extends React.Component {\n  state = {\n    loading: true, authenticated: false, user: null,\n  }\n  componentWillMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ authenticated: true, currentUser: user, loading: false });\n      } else {\n        this.setState({ authenticated: false, currentUser: null, loading: false });\n      }\n    });\n  }\n  render() {\n    const { loading } = this.state;\n    if (loading) { return <p>Loading..</p>; }\n    return (\n      <Provider store={store} >\n        <PersistGate loading={null} persistor={persistor}>\n        <Routers />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}